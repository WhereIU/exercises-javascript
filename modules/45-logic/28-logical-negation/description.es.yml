---

name: Negación
theory: |

  Junto con la conjunción (Y) y la disyunción (O), a menudo se utiliza la operación de "negación". La negación cambia el valor lógico al opuesto. En programación, se corresponde con el operador unario `!`.

  Si hay una función que verifica si un número es par, se puede realizar una verificación de si es impar utilizando la negación:

  ```javascript
  const isEven = (number) => number % 2 === 0;

  isEven(10);  // true
  !isEven(10); // false
  ```


  Es decir, simplemente agregamos `!` antes de llamar a la función y obtenemos la acción opuesta.

  La negación es una herramienta poderosa que permite expresar reglas previstas de manera concisa en el código sin necesidad de escribir nuevas funciones.

  ¿Y qué pasa si escribimos `!!isEven(10)`? Sorprendentemente, el código funcionará. En lógica, la doble negación es similar a la ausencia de negación en absoluto.

  ```javascript
  isEven(10);   // true
  !isEven(10);  // false
  !!isEven(10); // true
  ```

instructions: |

  En esta lección, deberás implementar dos funciones: `isPalindrome()` e `isNotPalindrome()`

  1. La función `isPalindrome()` determina si una palabra es un palíndromo o no. Un palíndromo es una palabra que se lee igual en ambos sentidos.

      ```javascript
      isPalindrome('ala'); // true
      isPalindrome('radar'); // true
      isPalindrome('hexlet'); // false

      // Las palabras pueden ser pasadas a la función en cualquier caso
      // Por lo tanto, primero debes convertir la palabra a minúsculas word.toLowerCase()
      isPalindrome('ala'); // true
      ```

      Para determinar si una palabra es un palíndromo, debes invertir la cadena y compararla con la original. Para ello, utiliza la función `reverse()`

      ```javascript
      reverse('mama'); // mama
      ```

  2. La función `isNotPalindrome()` verifica que una palabra NO sea un palíndromo:

      ```javascript
      isNotPalindrome('radar'); // false
      isNotPalindrome('ala'); // false
      isNotPalindrome('hexlet'); // true
      ```

      Para ello, llama a la función `isPalindrome()` dentro de `isNotPalindrome()` y aplica la negación.

tips:
  - |
    [Leyes de De Morgan](https://es.wikipedia.org/wiki/Leyes_de_De_Morgan)

definitions:
  - name: Negación
    description: |
      operación lógica que cambia el valor lógico al opuesto.
